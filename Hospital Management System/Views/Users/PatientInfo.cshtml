@using HospitalManagementLibrary.Constants
<iframe name="print_frame" src="~/PdfViewer/result.pdf" height="0" width="0" title=""></iframe>
<div class="modal fade" id="modalForm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" data-backdrop="static" aria-hidden="true">
    <div class="modal-dialog" role="document" id="mainform">
        <div class="modal-content">
            <div class="modal-header text-center">
                <h4 class="modal-title w-100">
                    <b id="ModalTitle"></b>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </h4>
            </div>
            <div class="modal-body mx-3" id="mbody">
            </div>
            <div class="modal-footer d-flex justify-content-center">
                <button type="button" class="btn btn-warning" id="editRecord" style="width:70px">Edit</button>
                <button type="submit" class="btn btn-success" id="saveRecord" style="width:70px">Add</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" style="width:70px">Cancel</button>
            </div>
        </div>
    </div>
</div>

@*<button type="button" class="btn" style="background-color:black;width: 80px; margin-left:102%; margin-top: -5%;color:white;" onclick="Logout()">LogOut</button>*@

<div class="modal fade" id="deleteConfirm" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" data-backdrop="static" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document" id="deleteform">
        <div class="modal-content">
            <div class="modal-header text-center">
                <h4 class="modal-title w-100 font-weight-bold" id="ModalTitle">
                    <b>@Titles.DeleteTitle</b>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </h4>
            </div>
            <div class="modal-body mx-3" id="deletebody">
            </div>
            <div class="modal-footer d-flex justify-content-center">
                <button type="button" class="btn btn-danger" onclick="confirmDelete($('#deleteid').val())" style="width:75px">Confirm</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" style="width:75px">Cancel</button>
            </div>
        </div>
    </div>
</div>


<div class="modal fade  bd-example-modal-lg " id="PrintPreview" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" data-backdrop="static" aria-hidden="true" style="margin-top:-73px">
    <div class="modal-dialog modal-lg modal-dialog-centered" role="document" id="printform" style="width:94%;margin-left:3%;margin-right:3%">


    </div>
</div>



<div class="overflow:auto tbl">
    <button type="button" id="create" class="btn btn-success btn-position btn-rounded mb-4" onClick="operation('Add',0)">Add Patient</button>

    <!-- Example split danger button -->
    <div class="btn-group">
        <button type="button" class="btn btn-danger" style="margin-top: -13px" ; onclick="PrintAll()">Print</button>
        <button type="button" class="btn btn-danger dropdown-toggle dropdown-toggle-split" style=" margin-top: -13px;" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <span class="glyphicon glyphicon-chevron-down"></span>
        </button>
        <div class="dropdown-menu drop">
            <ul>
                <li class="dropdown-item" style="list-style: none; cursor: pointer" onclick="printall()">Export to PDF</li>
                <li class="dropdown-item" style="list-style: none; cursor: pointer" id="btnExcel">Export to Excel</li>
            </ul>

        </div>
    </div>
    <table id="PatientTable" class="display table-bordered" style="width:100%">
        <thead class="hd">
            <tr>
                <th></th>
                <th>ID</th>
                <th>Name</th>
                <th>Age</th>
                <th>Gender</th>
                <th>Date (D/M/Y)</th>
                <th>In-Patient</th>
                @*<th>Created By</th>
                    <th>Created Date</th>
                    <th>Modified By</th>
                    <th>Modified Date</th>*@
                <th>Action</th>
            </tr>
        </thead>
    </table>
</div>

<script>
    function Logout() {
        $.get("/Users/Logout");
        location.reload();
    }
    function printall() {
        $.get("/Users/PrintPatients", function (res) {
            $("#printform").html(res);
            $('#PrintPreview').modal('show');
        })
        setTimeout(getprint, 1000)
    }

    function getprint() {
        window.frames["print_frames"].window.focus();
        window.frames["print_frames"].window.print();
    }

    function currentpage() {
        $("#PatientTable").DataTable().page.len(length).draw();
    }

    $(document).on('click', '#btnExcel', function () {
        var info = $("#PatientTable").DataTable().page.info();
        length = info.length;
        $("#PatientTable").DataTable().page.len(info.recordsTotal).draw();
        setTimeout(excelFunction, 2000);
    });

    function excelFunction() {

        $(".buttons-excel")[0].click();
        setTimeout(currentpage, 2000);

    }

    $(document).on('click', '#btnPdf', function () {
        var info = $("#PatientTable").DataTable().page.info();
        length = info.length;
        $("#PatientTable").DataTable().page.len(info.recordsTotal).draw();
        setTimeout(pdfFunction, 2000);
    });

    function changeGliphiconColour(x) {
        x.classList.toggle("glyphicon-minus-sign");
    }

    function pdfFunction() {

        $(".buttons-pdf")[0].click();
        setTimeout(currentpage, 2000);

    }

    function format(d) {
        return '<table cellpadding="5" cellspacing="0" border="0" style="padding-left:50px;">' +
            '<tr>' +
            '<td>Created By:</td>' +
            '<td>' + d.Created_Name + '</td>' +
            '</tr>' +
            '<tr>' +
            '<td>Created Date:</td>' +
            '<td>' + d.Created_date + '</td>' +
            '</tr>' +
            '<tr>' +
            '<td>Modified By:</td>' +
            '<td>' + d.Modified_Name + '</td>' +
            '</tr>' +
            '<td>Modified Date:</td>' +
            '<td>' + d.Modified_date + '</td>'
        '</table>';
    }
    var PatTable
    $(document).ready(function () {
        PatTable = $('#PatientTable').DataTable(
            {
                "serverSide": true,
                "filter": true,
                "order": [[1, "desc"]],
                "dom": '<"top"Bf>rt<"bottom"ilp><"clear">',

                buttons:
                    [
                        {
                            extend: 'excel',
                            exportOptions: {
                                columns: [1, 2, 3, 4, 5, 6]
                            }
                        }


                    ],

                "scrollY": "300px",
                "scrollCollapse": false,
                "initComplete": function (settings, json) {
                    $('body').find('.dataTables_scrollBody').addClass("scrollbar");
                },
                "responsive": {
                    details: {
                        type: 'column'
                    }
                },
                columnDefs: [
                    {
                        "className": 'dt-control',
                        "orderable": false,
                        "targets": 0
                    },
                    {
                        "targets": [1],
                        "searchable": false
                    },
                    {
                        "targets": [3, 4, 5, 6, 7],
                        "className": 'dt-head-center dt-body-center'
                    }
                ],
                "ajax": {
                    "url": "/Patient/PatientData",
                    "type": "POST",
                    "datatype": "json"
                },
                "columns": [
                    {
                        "data": null,
                        "width": "0.5%",
                        "defaultContent": '<i onclick="changeGliphiconColour(this)" class = "glyphicon glyphicon-plus-sign"> </ i>',
                    },
                    {
                        "data": "Id",
                        "name": "Id",
                        "width": "5%",
                        "render": function (id) {
                            return ('HM' + id + 'S');
                        }
                    },
                    {
                        "data": { Name: "Name", LastName: "LastName" },
                        "name": "Name",
                        "render": function (data) {
                            return data.Name + " " + data.LastName;
                        },
                        "width": "10%"
                    },
                    {
                        "data": "Age",
                        "name": "Age",
                        "width": "5%"
                    },
                    {
                        "data": "Gender",
                        "name": "Gender",
                        "width": "5%"
                    },
                    {
                        "data": "Date",
                        "name": "Date",
                        "type": "DateTime",
                        "width": "8%",
                        "render": function (value) {
                            if (value === null) return "";
                            var pattern = /Date\(([^)]+)\)/;
                            var results = pattern.exec(value);
                            var dt = new Date(parseFloat(results[1]));
                            return dt.getDate() + "/" + (dt.getMonth() + 1) + "/" + dt.getFullYear();
                        }
                    },
                    {
                        "data": "InPatient",
                        "name": "InPatient",
                        "width": "8%",
                        "type": "bool",
                        "render": function (value) {
                            if (value === true) return "Yes";
                            else return "No";
                        }
                    },
                    //{
                    //    "data": "Created_by",
                    //    "name": "Created_by",
                    //    "width": "5%"
                    //},
                    //{
                    //    "data": "Created_date",
                    //    "name": "Created_date",
                    //    "width": "10%"
                    //},
                    //{
                    //    "data": "Modified_by",
                    //    "name": "Modified_by",
                    //    "width": "5%"
                    //},
                    //{
                    //    "data": "Modified_date",
                    //    "name": "Modified_date",
                    //    "width": "8%"
                    //},
                    {
                        "data": "Id",
                        "width": "10%",
                        "render": function (id) {
                            return ('<a class="view" title="View" onclick="operation(`View`,' + id + ')"><span class="glyphicon glyphicon-zoom-in"></span></a><a class="edit" title="Edit" onclick="operation(`Edit`,' + id + ')"><span class="glyphicon glyphicon-edit"></span></a><a class="delete" title="Delete" onclick="deleteData(' + id + ')"><span class="glyphicon glyphicon-trash"></span></a>');
                        }
                    }
                ]
            }
        );
        $('#PatientTable tbody').on('click', 'td.dt-control', function () {
            var tr = $(this).closest('tr');
            var row = PatTable.row(tr);

            if (row.child.isShown()) {
                row.child.hide();
                tr.removeClass('shown');
            }
            else {
                row.child(format(row.data())).show();
                tr.addClass('shown');
            }
        });
    });

    function PrintAll() {
        $.get("/Patient/Print", function (res) {
            $("#printform").html(res);
            $('#PrintPreview').modal('show');
        });
        setTimeout(getprint, 1000)
    }

    function getprint() {
        window.frames["print_frame"].window.focus();
        window.frames["print_frame"].window.print();
    }

    function operation(op, id) {
        var url = "/Patient/Get?operation=" + op + "&id=" + id;
        $("#modalForm").modal('show');
        $.ajax({
            type: "GET",
            url: url,
            success: function (data) {
                $('#mbody').html(data);
            }
        })
    }

    function deleteData(id) {
        var url = "/Patient/Get?operation=Delete&id=" + id;
        $("#deleteConfirm").modal('show');
        $.ajax({
            type: "GET",
            url: url,
            success: function (data) {
                $('#deletebody').html(data);
            }
        })
    }

    function confirmDelete(id) {
        $.ajax({
            type: "POST",
            url: "/Patient/Delete/" + id,
            success: function () {
                $('#PatientTable').DataTable().ajax.reload(null, false);
                $("#deleteConfirm").modal("hide");
                toastr.options = {
                    "closeButton": false,
                    "newestOnTop": false,
                    "positionClass": "toast-bottom-right",
                    "preventDuplicates": false,
                    "onclick": null,
                    "showDuration": "100",
                    "hideDuration": "500",
                    "timeOut": "1500",
                    "extendedTimeOut": "500",
                    "showEasing": "swing",
                    "hideEasing": "linear",
                    "showMethod": "fadeIn",
                    "hideMethod": "fadeOut"
                }
                toastr["success"]("Patient Deleted")
            },
            error: function (error) {
                nameValidation();
                lastnameValidation();
                ageValidation();
                genderValidation();
                dateValidation();
                toastr.options = {
                    "closeButton": false,
                    "newestOnTop": false,
                    "positionClass": "toast-bottom-right",
                    "preventDuplicates": false,
                    "onclick": null,
                    "showDuration": "100",
                    "hideDuration": "500",
                    "timeOut": "1500",
                    "extendedTimeOut": "500",
                    "showEasing": "swing",
                    "hideEasing": "linear",
                    "showMethod": "fadeIn",
                    "hideMethod": "fadeOut"
                }
                toastr["error"]("Error")
            }
        });
    }

    $("#saveRecord").click(function () {
        var myFormData = $("#SubmitForm").serialize();
        $.ajax({
            type: "POST",
            url: "/Patient/Update",
            data: myFormData,
            success: function () {
                $('#PatientTable').DataTable().ajax.reload(null, false);
                $("#modalForm").modal("hide");
                toastr.options = {
                    "closeButton": false,
                    "newestOnTop": false,
                    "positionClass": "toast-bottom-right",
                    "preventDuplicates": false,
                    "onclick": null,
                    "showDuration": "100",
                    "hideDuration": "500",
                    "timeOut": "1500",
                    "extendedTimeOut": "500",
                    "showEasing": "swing",
                    "hideEasing": "linear",
                    "showMethod": "fadeIn",
                    "hideMethod": "fadeOut"
                }
                toastr["success"](message)
            },
            error: function (error) {
                nameValidation();
                lastnameValidation();
                ageValidation();
                genderValidation();
                dateValidation();
                toastr.options = {
                    "closeButton": false,
                    "newestOnTop": false,
                    "positionClass": "toast-bottom-right",
                    "preventDuplicates": false,
                    "onclick": null,
                    "showDuration": "100",
                    "hideDuration": "500",
                    "timeOut": "1500",
                    "extendedTimeOut": "500",
                    "showEasing": "swing",
                    "hideEasing": "linear",
                    "showMethod": "fadeIn",
                    "hideMethod": "fadeOut"
                }
                toastr["error"]("Error")
            }
        });
    })

    function nameValidation() {
        var letters = /^[A-za-z]+$/;
        if (!$("#name").val().match(letters) && $("#name").val() != "") {
            $("#namevalidation").html("Cannot contain spaces, numbers or special characters");
        }
        else if ($("#name").val().length >= 31) {
            $("#namevalidation").html("Cannot contain more than 30 characters");
        }
        else if ($("#name").val() == "") {
            $("#namevalidation").html("Please provide First Name");
        }
        else {
            $("#namevalidation").html("");
        }
    }

    function lastnameValidation() {
        var letters = /^[A-za-z]+$/;
        if (!$("#lastname").val().match(letters) && $("#lastname").val() != "") {
            $("#lastnamevalidation").html("Cannot contain spaces, numbers or special characters");
        }
        else if ($("#lastname").val().length >= 31) {
            $("#lastnamevalidation").html("Cannot contain more than 30 characters");
        }
        else if ($("#lastname").val() == "") {
            $("#lastnamevalidation").html("Please provide Last Name");
        }
        else {
            $("#lastnamevalidation").html("");
        }
    }

    function ageValidation() {
        if ($("#age").val() < 0 && $("#age").val() != "") {
            $("#agevalidation").html("Give proper age");
        }
        else if ($("#age").val() >= 121) {
            $("#agevalidation").html("Cannot exceed 120");
        }
        else if ($("#age").val() == "") {
            $("#agevalidation").html("Age cannot be empty");
        }
        else {
            $("#agevalidation").html("");
        }
    }

    function genderValidation() {
        if ($("#gender").val() == "Select") {
            $("#gendervalidation").html("Select gender");
        }
        else {
            $("#gendervalidation").html("");
        }
    }

    function dateValidation() {
        var dateFormat = /^(?<!\d)(\d{2}|\d{4})(?!\d)[\/-](0?[1-9]|1[0-2])[\/-](0?[1-9]|[1-2][0-9]|3[01])/;
        if (!$("#date").val().match(dateFormat)) {
            $("#datevalidation").html("Enter proper date");
        }
        else {
            $("#datevalidation").html("");
        }
    }

</script>
