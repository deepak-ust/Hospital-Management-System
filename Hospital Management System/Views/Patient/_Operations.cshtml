@model Hospital_Management_System.Models.Patient
@using HospitalManagementLibrary.Enum;
@using HospitalManagementLibrary.Constants;

<form id="RegForm">
    <fieldset id="SubmitForm">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                <br />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id, new { @id = "id" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control disable", @id = "name", @placeholder = "Enter name", @name = "name" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger", @id= "namevalidation" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control disable", @id = "age", @placeholder = "Enter age", @name = "age" } })
                        @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger", @id = "agevalidation" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-5">
                        <select class="form-control disable" name="Gender" id="gender">
                            <option value="Select" id="select">Select</option>
                            <option value="Male">Male</option>
                            <option value="Female">Female</option>
                            <option value="Other">Other</option>
                        </select>
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger", @id = "gendervalidation" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Date, "Date (D-M-Y)", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-5">
                        @Html.TextBoxFor(model => model.Date, new { @type = "date", @class = "form-control disable", @id = "date" })
                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger", @id = "datevalidation" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="control-label col-md-3"></div>
                    <div class="col-md-6">
                        <span style="margin-right:1px">
                            @Html.EditorFor(model => model.InPatient, new { htmlAttributes = new { @id = "inpatient", @class = "disable" } })
                        </span><b>In-Patient</b>
                        @Html.ValidationMessageFor(model => model.InPatient, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        }
    </fieldset>
</form>
<script>
    $(document).ready(function () {
        var gender = '@ViewData["Gender"].ToString()';/*For setting the value of "Gender" drop-down*/
        var operation = '@Model.ActionType.ToString()';
        $('#date').val('@ViewData["Date"].ToString().Split('-')[2].Split(' ')[0]-@ViewData["Date"].ToString().Split('-')[1]-@ViewData["Date"].ToString().Split('-')[0]');/*For input type "date", the format should be (yyyy-mm-dd)*/
        if (operation == '@Operations.View') {
            $("#ModalTitle").html('@Titles.ViewTitle');
            $("#saveRecord").html("Save");
            $("#saveRecord").attr('disabled', true);
            $("#editRecord").attr('disabled', false);
            $('#select').attr('hidden', true);
            $('.disable').attr('disabled', true);
            $('#gender').val(gender);
        }
        else {
            $("#ModalTitle").html('@Titles.AddTitle');
            $("#saveRecord").html("Add");
            $("#saveRecord").attr('disabled', false);
            $("#editRecord").attr('disabled', true);
            $('.disable').attr('disabled', false);
            $('.form-control').attr('value', null);
        }
        $('#editRecord').click(function () {
            $('.disable').attr('disabled', false);
            $('#editRecord').attr('disabled', true);
            $('#saveRecord').attr('disabled', false);
            $('#ModalTitle').html('@Titles.EditTitle');
        })
        });
</script>
